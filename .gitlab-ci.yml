stages:
  - build
  - test
  - deploy

.elixir:
  image: elixir:1.12.3
  cache:
    paths:
      - _build
      - deps

compile:
  stage: build
  extends: ".elixir"
  script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
    - mix compile --warnings-as-errors

test:
  stage: test
  extends: ".elixir"
  services:
    - postgres:13.2-alpine
  variables:
    POSTGRES_DB: shroud_test
    POSTGRES_HOST: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "postgres"
    MIX_ENV: "test"
  before_script:
    # Install codecov uploader and verify integrity
    - apt-get update
    - apt-get install curl
    - curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
    - curl -Os https://uploader.codecov.io/latest/linux/codecov
    - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
    - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
    - gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
    - shasum -a 256 -c codecov.SHA256SUM
    - chmod +x codecov
    - mix local.hex --force
    - mix local.rebar --force
    - mix ecto.setup
  script:
    - mix coveralls.json
    - ./codecov

lint:
  stage: test
  extends: ".elixir"
  variables:
    MIX_ENV: "test"
  script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix format --check-formatted
    - mix credo
    - mix sobelow --config --private

deploy_production:
  stage: deploy
  image: dokku/ci-docker-image
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  environment:
    name: production
  variables:
    GIT_REMOTE_URL: ssh://dokku@49.12.228.69:22/shroud
    BRANCH: main
    GIT_DEPTH: 0
  script: dokku-deploy
  after_script: [dokku-unlock]
  interruptible: true

stages:
  - test
  - deploy

.elixir:
  image: hexpm/elixir:1.13.4-erlang-24.3.4-ubuntu-jammy-20220428
  variables:
    MIX_ENV: test
    FF_USE_FASTZIP: "true"
  before_script:
    - apt-get update
    - apt-get install -y git cargo build-essential curl
  cache:
    paths:
      - _build/
      - deps/

test:
  stage: test
  extends: ".elixir"
  services:
    - postgres:13.2-alpine
  variables:
    POSTGRES_DB: shroud_test
    POSTGRES_HOST: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "postgres"
  script:
    # Install codecov uploader and verify integrity
    - curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
    - curl -Os https://uploader.codecov.io/latest/linux/codecov
    - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
    - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
    - gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
    - shasum -a 256 -c codecov.SHA256SUM
    - chmod +x codecov
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
    - mix compile --warnings-as-errors
    - mix ecto.setup
    - mix coveralls.json
    - ./codecov

lint:
  stage: test
  extends: ".elixir"
  script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
    - mix format --check-formatted
    - mix credo
    - mix sobelow --config

docker_push:
  stage: deploy
  image: docker:20.10.12
  services:
    - docker:dind
  variables:
    CI_REGISTRY_IMAGE: taooat/shroud.email
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - main

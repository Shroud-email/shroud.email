name: Build

on:
  push:
    branches:
      - main
    tags:
      - "*"
  workflow_dispatch:

permissions:
  packages: write

jobs:
  build:
    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            runner: blacksmith-4vcpu-ubuntu-2404
            docker_platform: linux/amd64
          - platform: arm64
            runner: blacksmith-4vcpu-ubuntu-2404-arm
            docker_platform: linux/arm64
    runs-on: ${{ matrix.runner }}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4

      # Configure Blacksmith's BuildKit + layer cache
      - name: Setup Blacksmith
        uses: useblacksmith/setup-docker-builder@v1

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Base (unsuffixed) tags used for final multi-arch manifest
      - name: Extract base tags
        id: meta_base
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=edge,branch=main
            type=sha

      # Arch-suffixed tags pushed by each matrix job (avoids collisions)
      - name: Extract arch-suffixed tags
        id: meta_arch
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            suffix=-${{ matrix.platform }},onlatest=true
          tags: ${{ steps.meta_base.outputs.tags }}

      - name: Build & push (single-arch)
        id: build
        uses: useblacksmith/build-push-action@v2
        with:
          context: .
          push: true
          platforms: ${{ matrix.docker_platform }}
          tags: ${{ steps.meta_arch.outputs.tags }}
          labels: ${{ steps.meta_base.outputs.labels }}

      # Save the digest produced by this job and the base tag list once
      - name: Persist digest
        run: |
          echo "${{ steps.build.outputs.digest }}" > digest-${{ matrix.platform }}.txt
        shell: bash

      - name: Upload digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: digest-${{ matrix.platform }}
          path: digest-${{ matrix.platform }}.txt

      - name: Persist base tags (once)
        if: matrix.platform == 'amd64'
        run: |
          echo "${{ steps.meta_base.outputs.tags }}" > tags.txt
        shell: bash

      - name: Upload base tags (once)
        if: matrix.platform == 'amd64'
        uses: actions/upload-artifact@v4
        with:
          name: tags
          path: tags.txt

  merge-manifests:
    name: Merge multi-arch manifests
    needs: build
    runs-on: blacksmith-2vcpu-ubuntu-2404
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "{tags,digest-*}"
          path: artifacts
          merge-multiple: true

      - name: Create & push multi-arch manifests (by digest)
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          set -euo pipefail

          AMD_DIGEST="$(cat artifacts/digest-amd64.txt)"
          ARM_DIGEST="$(cat artifacts/digest-arm64.txt)"
          TAGS_FILE="artifacts/tags.txt"

          # Ensure lowercase for GHCR (owner/repo can come mixed-case from GitHub)
          IMAGE_REF="${REGISTRY}/${IMAGE_NAME}"
          IMAGE_REF="${IMAGE_REF,,}"

          if [[ -z "$AMD_DIGEST" || -z "$ARM_DIGEST" ]]; then
            echo "Missing digests" >&2
            exit 1
          fi

          mapfile -t REFS < "$TAGS_FILE"
          for ref in "${REFS[@]}"; do
            tag="${ref##*:}"

            # Compose a multi-arch manifest purely from digests (most reliable)
            docker buildx imagetools create \
              -t "${IMAGE_REF}:${tag}" \
              "${IMAGE_REF}@${AMD_DIGEST}" \
              "${IMAGE_REF}@${ARM_DIGEST}"
          done
name: CI
on:
  pull_request:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    services:
      postgres:
        image: postgres:13.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: shroud_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@d85df626dd55cfc806e6b7593a0dfb2a465214a2
      with:
        elixir-version: '1.13.4'
        otp-version: '24.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Compile dependencies
      run: mix deps.compile
    - name: Check formatting
      run: mix format --check-formatted
    - name: Run linter
      run: mix credo
    - name: Check warnings
      run: mix compile --warnings-as-errors
    - name: Setup database
      run: mix ecto.setup
    - name: Run tests
      run: mix coveralls.json
    - uses: codecov/codecov-action@v3
      with:
        files: ./cover/excoveralls.json

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=ma
